<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- 添加 properties 配置文件-->
    <properties resource="database.properties">
        <property name="username" value="root"></property>
        <property name="password" value="liu2019"></property>
    </properties>

    <!--完整的 setting 配置-->
    <settings>
        <!-- 全局映射器启用缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 查询时，关闭关联对象即时加载以提高性能 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
            允许和不允许单条语句返回多个数据集（取决于驱动需求）
        -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 允许使用列标签代替列名 -->
        <setting name="useColumnLabel" value="true"/>
        <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
        <setting name="useGeneratedKeys" value="true"/>
        <!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
        <setting name="autoMappingBehavior" value="FULL"/>
        <!-- 指定发现自动映射目标未知列（或者未知属性类型）的行为，NONE 不做任何反应 WARNING 输出日志提醒-->
        <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
        <!-- 配置默认的执行器
            SIMOLE  普通的执行器
            REUSE   执行器会重用 预处理语句（prepared statements）
            BATCH   执行器将重用语句并且执行批量更新
        -->
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <!-- 数据库超过25000秒仍未响应则超时 -->
        <setting name="defaultStatementTimeout" value="25000"/>
        <!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值，此参数只可以在查询设置被覆盖-->
        <setting name="defaultFetchSize" value="100"/>
        <!-- 允许在嵌套语句中使用分页（RowBounds），允许使用设置为 false-->
        <setting name="safeRowBoundsEnabled" value="false"/>
        <!-- 驼峰 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--
            Mybatis 利用本地缓存机制（Local case）防止循环引用（circular references）和重复嵌套查询
            SESSION(默认) ：会缓存一个会话中执行的所有查询
            STATEMENT ：本地会话仅用作语句的执行上，对相同的SQLSession 的不同调用将不会共享数据。
         -->
        <setting name="localCacheScope" value="SESSION"/>
        <!-- 设置当JDBC类型为空时,某些驱动程序 要指定值,default: OTHER-->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!-- 指定 哪个对象的方法触发一次延迟加载-->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode"/>
        <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 -->
        <!-- <setting name="aggressiveLazyLoading" value="false"/>-->
        <!-- 查询map为空是保留字段 -->
        <!--<setting name="callSettersOnNulls" value="true"/>-->
        <!-- 日志 -->
        <!--<setting name="logImpl" value="LOG4J"/>-->
    </settings>

    <!--&lt;!&ndash;配置类的别名&ndash;&gt;
    <typeAliases>
        <typeAlias type="com.iotknowyou.springsources.mybatisTest.entity.User" alias="User"/>
    </typeAliases>-->

    <!-- 在实际的项目中，java Bean 会比较多，我们可以指定一个bao名 ，Mybatis 会在包名下面搜索需要的 JavaBean ，
         在没有注解的情况下，会使用Bean的非限定类名作为他的别名
    -->
    <typeAliases>
        <package name="com.iotknowyou.springsources.mybatisTest.entity"/>
    </typeAliases>

    <!-- 配置数据连接信息    -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager>
            <!--配置数据库的连接信息-->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"></property>
                <property name="url" value="${url}"></property>
                <property name="username" value="${username}"></property>
                <property name="password" value="${password}"></property>
            </dataSource>
        </environment>
    </environments>

    <!-- 程序中所使用到的sql映射文件都在这里列出来，这些映射sql都被 Mybatis 管理-->
    <mappers>
        <mapper resource="Mapper/UserMapper.xml"></mapper>
    </mappers>


</configuration>